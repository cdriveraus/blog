MANIFESTMEANS=c('m1'),
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
#fit
ssfit <- ctStanFit(datalong, ssmodel, iter=300, optimize=TRUE)
ctKalman(ssfit,plot=T)
datalong <- data.frame(id=1,
time=do.call(seq,as.list(attributes(sunspot.year)$tsp)),
sunspots=sunspot.year)
#setup model
ssmodel <- ctModel(type='stanct',
manifestNames='sunspots',
latentNames=c('ss_level', 'ss_velocity'),
LAMBDA=c( 1, 'ma1| log(1+(exp(param)))'),
DRIFT=c(0, 1,
'a21 | -log(1+exp(-param))-1e-5','a22'),
MANIFESTMEANS=c('m1|param*10+44'),
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
#fit
ssfit <- ctStanFit(datalong, ssmodel, iter=300, optimize=TRUE)
ctKalman(ssfit,plot=T)
ctKalman(ssfit,plot=TRUE,subjects=1,kalmanvec=c('y','yprior'),timestep=.01)
ctKalman(ssfit,plot=TRUE,kalmanvec=c('y','yprior'),timestep=.1)
?plot.ctKalmanDF
ctKalman(ssfit,plot=TRUE,kalmanvec=c('etasmooth'),timestep=.1)
ssfit <- ctStanFit(ssdat, ssmodel, optimize=TRUE, optimcontrol=list(is=TRUE))
ssdat <- data.frame(id=1,
time=do.call(seq,as.list(attributes(sunspot.year)$tsp)),
sunspots=sunspot.year)
ssfit <- ctStanFit(ssdat, ssmodel, optimize=TRUE, optimcontrol=list(is=TRUE))
blogdown:::serve_site()
ssmodel <- ctModel(type='stanct',
manifestNames='sunspots',
latentNames=c('ss_level', 'ss_velocity'),
LAMBDA=c( 1, 0),
DRIFT=c(0, 1,
'a21 | -log1p(exp(-param))-1e-5','a22'),
MANIFESTMEANS=c('m1'),
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
library(ctsem)
ssmodel <- ctModel(type='stanct',
manifestNames='sunspots',
latentNames=c('ss_level', 'ss_velocity'),
LAMBDA=c( 1, 0),
DRIFT=c(0, 1,
'a21 | -log1p(exp(-param))-1e-5','a22'),
MANIFESTMEANS=c('m1'),
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
plot(ssmodel)
blogdown:::serve_site()
# Chunk 1: setup
knitr::opts_chunk$set(collapse = TRUE,cache=TRUE,warning=FALSE,message=FALSE,results='hide')
slug <- 'growth-curves-in-continuous-time'
dir.create(slug)
savedir <- normalizePath(paste0(getwd(),'/',slug))
# Chunk 4
library(ctsem)
# Chunk 5
ssdat <- data.frame(id=1,
time=do.call(seq,as.list(attributes(sunspot.year)$tsp)),
sunspots=sunspot.year)
head(ssdat)
# Chunk 6
ssmodel <- ctModel(type='stanct',
manifestNames='sunspots',
latentNames=c('ss_level', 'ss_velocity'),
LAMBDA=c( 1, 0),
DRIFT=c(0, 1,
'a21 | -log1p(exp(-param))-1e-5','a22'),
MANIFESTMEANS=c('m1'),
MANIFESTVAR='merror',
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
ctModelLatex(ssmodel)
# Chunk 7: TEX
ctModelLatex(ssmodel,textsize = 'footnotesize',folder=savedir,filename = 'mdefaulttex',open=FALSE)
library(magick)
tiger <- image_trim(image_read_pdf(paste0(savedir,'/mdefaulttex.pdf'),density = 300))
plot(tiger)
#image_write(tiger,paste0(savedir,'/mdefaulttex.png'),format = 'png')
#knitr::include_graphics(paste0(savedir,'/mdefaulttex.png'))
#![tex](mdefaulttex.png)
# Chunk 8
ssfit <- ctStanFit(ssdat, ssmodel, optimize=TRUE, cores=2)
# Chunk 9
summary(ssfit)
#plots of individual subject models v data
ctKalman(ssfit,plot=TRUE,kalmanvec=c('y','yprior'),timestep=.1)
ctKalman(ssfit,plot=TRUE,kalmanvec=c('etasmooth'),timestep=.1)
ctModelLatex(ssfit)
# Chunk 10: TEX2
ctModelLatex(ssfit,textsize = 'footnotesize',folder=savedir,filename = 'mdefaulttex',open=FALSE)
library(magick)
tiger <- image_trim(image_read_pdf(paste0(savedir,'/mdefaulttex.pdf'),density = 300))
plot(tiger)
#image_write(tiger,paste0(savedir,'/mdefaulttex.png'),format = 'png')
#knitr::include_graphics(paste0(savedir,'/mdefaulttex.png'))
#![tex](mdefaulttex.png)
# Chunk 11: plotmodel
plot(ssmodel)
# Chunk 12: adjustmodel
ssmodel <- ctModel(type='stanct',
manifestNames='sunspots',
latentNames=c('ss_level', 'ss_velocity'),
LAMBDA=c( 1, 0),
T0MEANS=c('t0_sslevel||FALSE','t0_ssvelocity||FALSE'),
DRIFT=c(0, 1,
'a21 | -log1p(exp(-param))-1e-5','a22'),
MANIFESTMEANS=c('m1|param*10+44'),
MANIFESTVAR='merror',
CINT=0,
DIFFUSION=c(0, 0,
0, "diffusion"))
ssmodel$pars$indvarying <- FALSE
# Chunk 13
ssfit <- ctStanFit(ssdat, ssmodel, iter=300, chains=2, cores=2)
ctStanPlotPost(ssfit)
priorpred <- ctStanGenerate(ctm = ssfit,datastruct = ssdat,cores=2,nsamples = 50)
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,cores=2,nsamples = 50)
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 50)
postpred$generated$Y
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=postpred$generated$Y,
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.1,colour='red')
libary(ggplot2)
library(ggplot2)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=postpred$generated$Y,
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.1,colour='red')
data.frame(sunspots=postpred$generated$Y,
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2]))
data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2]))
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.1,colour='red')
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 10)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.1,colour='red')
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 3)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.3,colour='red')
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 1)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.3,colour='red')
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour='sample')
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour='sample'))
data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2]))
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 3)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour='sample'))
dim(postpred$generated$Y)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour=sample))
data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2]))
rep(postpred$standata$time,dim(postpred$generated$Y)[2])
c(postpred$generated$Y)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = as.integer(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[2])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour=sample))
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = as.integer(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour=sample))
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.5,aes(colour=sample))
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 3)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(colour='black') +
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.7,aes(colour=sample))
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.7,aes(colour=sample))+
geom_line(colour='black',linewidth=1)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.7,aes(colour=sample))+
geom_line(colour='black',width=1)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])), alpha=.7,aes(colour=sample))+
geom_line(colour='black',size=1)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
sample = factor(rep(1:dim(postpred$generated$Y)[2],each=dim(postpred$generated$Y)[1])),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])),
alpha=.7,aes(colour=sample),size=.5)+
geom_line(colour='black',size=1)
postpred <- ctStanGenerateFromFit(ssfit, fullposterior = TRUE,nsamples = 200)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(postpred$generated$Y),
time=rep(postpred$standata$time,dim(postpred$generated$Y)[2])),
alpha=.05,colour='red',size=.5)+
geom_line(colour='black',size=1)
priorpred <- ctStanGenerate(ctm = ssmodel, datastruct = ssdat, cores=2, nsamples = 50)
priorpred
dim(priorpred)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(priorpred),
time=rep(ssdat$time,dim(priorpred)[2])),
alpha=.3,colour='red')+
geom_line(colour='black',size=1)
priorpred <- ctStanGenerate(ctm = ssmodel, datastruct = ssdat, cores=2, nsamples = 200)
ggplot(data=ssdat,mapping = aes(y=sunspots,x=time)) +
theme_minimal()+
geom_line(data=data.frame(sunspots=c(priorpred),
time=rep(ssdat$time,dim(priorpred)[2])),
alpha=.3,colour='red')+
geom_line(colour='black',size=1)
blogdown:::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown::serve_site()
n = 1000
FX <- function(x){return(-x^4 + 4*x^3 - 8*x +8 )}
x = seq(-1.5,3.5,0.01)
plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
samp = Q
bw = npudensbw(dat=samp, bwmethod = "normal-reference")
library(ks)
library(rgl)
library(misc3d)
library(np)
bw = npudensbw(dat=samp, bwmethod = "normal-reference")
dens = npudens(bws=bw,data=samp)
plot(dens)
bw = npudensbw(dat=samp)#, bwmethod = "normal-reference")
dens = npudens(bws=bw,data=samp)
plot(dens)
plot(density(samp))
plot(samp)
plot(dens)
dens
plot(density(samp,bw=.09))
?npudensbw
dens
dens$dens
sum(dens$dens)
sum(dens$dens)*.09
sum(dens$dens*.09)
dens2=density(samp,bw=.09)
dens2$y
sum(dens2$y)*.09
sum(dens2$y)/diff(range(dens2$x))
diff(range(dens2$x))
(range(dens2$x))
?density
dens$dens
?npudens
diff(samp)
pdens = predict(dens,seq(-5,5))
pdens
px = seq(-5,5)
pdens = predict(dens,px)
plot(px,pdens)
plot(px,pdens$fit)
length(pdens$fit)
length(px)
px = seq(-5,5,.01)
pdens = predict(dens,px)
plot(px,pdens$fit)
px
pdens$fit
px
length(px)
plot(px[-1],pdens$fit)
plot(pdens$fit)
sum(pdens$fit)
sum(pdens$fit/.01*10)
?sample
plot(density(samp,bw=.09))
plot(density(samp*10,bw=.09))
sum(dens$dens[-1]/diff(samp))
diff(samp)
any(diff(samp)==0)
sum(dens$dens[-1]*diff(samp))
sum(dens$dens[-1]*-diff(samp))
n = 20000
FX <- function(x){return(-x^4 + 4*x^3 - 8*x +8 )}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
############### R base ####################
plot(density(Q))
samp = Q
bw = npudensbw(dat=samp)#, bwmethod = "normal-reference")
?npudensbw
plot(x,FX(x))
n = 1000
FX <- function(x){
doflip=FALSE
if(x > 2) doflip=TRUE
x=-x^4 + 4*x^3 - 8*x +8
if(doflip) x = -x
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = -x
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = -x[doflip]
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x=x+1
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x[doflip+1
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x[doflip]+1
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
n = 1000
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x[doflip]+1
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
plot(density(Q))
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x[doflip]+3
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x))
plot(x,FX(x),type='l')
plot(density(Q))
samp = Q
bw = npudensbw(dat=samp)#, bwmethod = "normal-reference")
dens = npudens(bws=bw,data=samp)
px = seq(-5,5,.01)
plot(dens)
bw = npudensbw(dat=samp, bwmethod = "normal-reference")
dens = npudens(bws=bw,data=samp)
plot(dens)
bw
n = 5000
FX <- function(x){
doflip=rep(FALSE,length(x))
doflip[x>2]=TRUE
x=-x^4 + 4*x^3 - 8*x +8
x[doflip] = x[doflip]+3
return(x )
}
x = seq(-1.5,3.5,0.01)
#plot(x,FX(x))
Q = sample(x,prob=FX(x),n,replace = T)
plot(x,FX(x),type='l')
############### R base ####################
plot(density(Q))
############### np ########################
samp = Q
bw = npudensbw(dat=samp, bwmethod = "normal-reference")
dens = npudens(bws=bw,data=samp)
plot(dens)
bw = npudensbw(dat=samp)
dens = npudens(bws=bw,data=samp)
plot(dens)
bw
plot(density(samp,bw=bw))
plot(density(samp,bw=bw$bw))
?npudensbw
bw = npudensbw(dat=samp, bwmethod = "cv-ls")
bw = npudensbw(dat=samp, bwmethod = "cv.ls")
dens = npudens(bws=bw,data=samp)
plot(dens)
sum(exp(dens$log_likelihood))
exp(dens$log_likelihood)
dens$log_likelihood
exp(-1000)
exp(-100)
dens$bws
dens$pscaling
dens$eval
dens = npudens(data=samp)
dens = npudens(bws=bw)
plot(dens)
sum(dens$dens)
exp(-4*3)
exp(-.4*3)
exp(-.1*3)
exp(-.1*10)
log(.5/10)
log(.5)/10
exp(-.07*10)
plot(kde(Q))
X = rnorm(n,0,10)
Y = rnorm(n,5,3)
W = rnorm(n,9,12)
#V = rnorm(n,4,1)
df = data.frame(X,Y,W)
KDE = kde(X)
plot(kde(df))
